<template>
  <div>
    <Snackbar :SnackBarComponent="SnackBarComponent" />
    <EditPurchasedQr
      :EditPurchasedQrDialog="EditPurchasedQrDialog"
      :StoreObj="StoreObj"
      @clicked="EditPurchasedQrDialogEmit"
    />
    <div class="flex-class2">
      <div>
        <h1 class="font50px yellowFontColor text-capitalize">My QR's</h1>
      </div>
      <!-- <div class="ms-auto">
        <v-btn
          rounded
          outlined
          class="text-capitalize white--text"
          @click="$router.push('/')"
          >back<v-icon color="white" size="17">mdi-arrow-left</v-icon></v-btn
        >
      </div> -->
    </div>
    <div class="d-flex justify-center contentDiv">
      <div class="flex-class2">
        <div
          v-for="(data, idx) in myPurchasedQrData"
          :key="idx"
          class="ma-5 boxShadow cardBorderRadius10px"
          v-show="myPurchasedQrData.length > 0"
        >
          <v-card flat class="cardBorderRadius10px boxShadow">
            <v-hover v-slot="{ hover }">
              <v-img
                :width="200"
                :height="200"
                :src="`https://qrjungle-all-qrcodes.s3.ap-south-1.amazonaws.com/${data.qr_code_image_url_key}`"
              >
                <div v-if="hover" class="overlay">
                  <div class="flex-class hoverBtns">
                    <div>
                      <v-btn
                        color="white"
                        icon
                        @click="editPurchasedQrMethod(data)"
                      >
                        <v-icon size="20" color="white" :key="idx"
                          >mdi-pencil</v-icon
                        >
                      </v-btn>
                    </div>
                  </div>
                </div>
              </v-img>
            </v-hover>

            <div class="text-center">
              <p style="font-weight: 700">Category</p>
              <p class="text-capitalize">{{ data.qr_code_category }}</p>
            </div>
          </v-card>
        </div>
        <div v-show="emptyQr === true" class="mt-15">
          <span class="white--text">No QR's available right now!!</span>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import { listMyQrs } from "@/graphql/queries.js";
import { API, graphqlOperation } from "aws-amplify";

import EditPurchasedQr from "@/components/Extras/MyQr/EditPurchasedQr.vue";
import Snackbar from "@/components/Extras/MySnackbar.vue";

export default {
  components: { EditPurchasedQr, Snackbar },
  data() {
    return {
      myPurchasedQrData: [],
      emptyQr: false,
      EditPurchasedQrDialog: false,
      StoreObj: {},
      SnackBarComponent: {},
    };
  },

  mounted() {
    this.getMyQrMethod();
  },

  methods: {
    async getMyQrMethod() {
      try {
        const result = await API.graphql(graphqlOperation(listMyQrs));
        console.log("GET_MY_PURCHASED_QR", JSON.parse(result.data.listMyQrs));
        this.myPurchasedQrData = JSON.parse(result.data.listMyQrs);
        if (this.myPurchasedQrData.status === 404) {
          this.emptyQr = true;
        }
      } catch (error) {
        console.log("Error", error);
      }
    },

    editPurchasedQrMethod(data) {
      this.EditPurchasedQrDialog = true;
      this.StoreObj = data;
    },

    EditPurchasedQrDialogEmit(Toggle) {
      this.EditPurchasedQrDialog = false;
      if (Toggle === 2) {
        this.getMyQrMethod();
      }
    },
  },
};
</script>

<style scoped>
.flex-class2 {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}

.hoverBtns {
  position: absolute;
  right: 5px;
  top: 5px;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.contentDiv {
  max-height: 520px;
  overflow-y: auto;
}
</style>
