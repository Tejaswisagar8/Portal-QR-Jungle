<template>
  <div id="home-page">
    <Snackbar :SnackBarComponent="SnackBarComponent" />
    <v-container
      fluid
      class="pa-0 homePageContainer"
      style="border-color: #fdcb0a"
    >
      <div class="flex-class">
        <div class="firstDiv">
          <v-card width="256" :height="720" elevation="0" class="navbarCard">
            <v-navigation-drawer permanent style="background-color: #1c1c1c">
              <v-list-item>
                <v-list-item-content>
                  <v-list-item-title>
                    <v-card flat color="black" :width="80" class="mx-auto">
                      <v-img src="@/assets/qrJungleLogo.png" :width="80" />
                    </v-card>
                  </v-list-item-title>
                  <v-list-item-subtitle class="mt-10">
                    <strong>
                      <strong class="font18px white--text">Categories</strong>
                    </strong>
                    <hr class="mt-3" color="#fdcb0a" />
                  </v-list-item-subtitle>
                </v-list-item-content>
              </v-list-item>

              <v-divider></v-divider>

              <v-list dense nav class="category-list">
                <v-list-item
                  v-for="(item, idx) in categoryData"
                  :key="idx"
                  link
                >
                  <v-list-item-content>
                    <v-list-item-title
                      style="font-size: 16px"
                      class="white--text"
                    >
                      <v-btn
                        block
                        @click="viewQrMethod(item.categoryName)"
                        color="#1c1c1c"
                        class="white--text text-capitalize"
                        :class="{
                          'yellow-bg': selectedCategory === item.categoryName,
                        }"
                      >
                        <span style="font-size: 13px; font-weight: 500">{{
                          item.categoryName
                        }}</span>
                      </v-btn>
                    </v-list-item-title>
                  </v-list-item-content>
                </v-list-item>
              </v-list>

              <v-spacer></v-spacer>
              <template v-slot:append>
                <div
                  class="pa-4"
                  v-if="$store.getters.get_user_info.user_name === undefined"
                >
                  <v-btn
                    block
                    rounded
                    class="text-capitalize"
                    style="background-color: #006769; color: white"
                    @click="$router.push('/loginpage')"
                    >Login<v-icon color="white" class="pl-1" size="17"
                      >mdi-account</v-icon
                    ></v-btn
                  >
                </div>
                <div class="pa-4" v-else>
                  <v-btn
                    block
                    rounded
                    class="text-capitalize"
                    style="background-color: #006769; color: white"
                    @click="logoutMethod()"
                    >Logout<v-icon color="white" class="pl-1" size="17"
                      >mdi-lock</v-icon
                    ></v-btn
                  >
                </div>
              </template>
            </v-navigation-drawer>
          </v-card>
        </div>

        <div class="pa-5 secondDiv">
          <div class="d-flex justify-end mb-5">
            <!-- <div class="ml-2 mr-2">
              <v-btn icon><v-icon color="white">mdi-magnify</v-icon></v-btn>
            </div> -->
            <div v-show="$store.getters.get_user_info.user_name !== undefined">
              <v-btn
                rounded
                outlined
                class="text-capitalize white--text"
                style="border-color: #fdcb0a"
                @click="myQrMethod()"
                >My QR's</v-btn
              >
            </div>
            <div
              class="ml-2 mr-2"
              v-show="$store.getters.get_user_info.user_name !== undefined"
            >
              <v-btn icon @click="$router.push('/myfavourites')"
                ><v-icon color="#fdcb0a">mdi-heart</v-icon></v-btn
              >
              <v-badge
                bottom
                color="green"
                :content="
                  $store.getters.get_fav_qr_id.length > 0
                    ? $store.getters.get_fav_qr_id.length
                    : 'o'
                "
                icon
                class="wishlistBadge"
                v-show="$store.getters.get_user_info.user_name !== undefined"
              ></v-badge>
            </div>
            <div class="ml-2 mr-2">
              <v-tooltip bottom>
                <template v-slot:activator="{ on, attrs }">
                  <v-card
                    v-bind="attrs"
                    v-on="on"
                    @click="abc()"
                    flat
                    color="transparent"
                  >
                    <v-badge
                      bordered
                      bottom
                      :color="
                        $store.getters.get_user_info.user_name === undefined
                          ? 'red'
                          : 'green'
                      "
                      dot
                      offset-x="10"
                      offset-y="10"
                    >
                      <v-avatar size="35">
                        <v-img src="@/assets/avatarImg.png"></v-img>
                      </v-avatar>
                    </v-badge>
                  </v-card>
                </template>
                <span>
                  <div
                    class="grid-class"
                    v-if="$store.getters.get_user_info.user_name !== undefined"
                  >
                    <div>
                      {{ $store.getters.get_user_info.user_name }}
                    </div>
                    <div>
                      {{ $store.getters.get_user_info.user_email_id }}
                    </div>
                  </div>
                  <div v-else>Kindly Login!</div>
                </span>
              </v-tooltip>
            </div>
          </div>
          <div v-if="enableChildPage === false">
            <div class="d-flex justify-left mb-3">
              <div class="grid-class" style="line-height: 45px">
                <h1 class="font50px yellowFontColor">
                  Hello
                  {{
                    $store.getters.get_user_info.user_name !== undefined
                      ? `${$store.getters.get_user_info.user_name},`
                      : null
                  }}
                </h1>
                <span class="font18px white--text"
                  >Welcome to the QR Jungle Portal</span
                >
              </div>
            </div>
            <div class="contentDiv">
              <div class="flex-class1 d-flex justify-center">
                <div
                  class="ma-5 boxShadow cardBorderRadius10px"
                  v-for="(item, idx) in categoryData"
                  :key="idx"
                >
                  <v-card flat class="cardBorderRadius10px">
                    <v-hover v-slot="{ hover }">
                      <div>
                        <v-img
                          class="mx-auto"
                          style="border-radius: 10px 10px 0 0"
                          :width="200"
                          :height="200"
                          :src="item.qrImgURL"
                          :lazy-src="item.qrImgURL"
                        />
                        <div v-if="hover" class="overlay">
                          <div class="flex-class hoverBtns">
                            <div>
                              <v-btn
                                color="white"
                                icon
                                @click="viewQrMethod(item.categoryName)"
                              >
                                <v-icon size="20" color="white" :key="idx"
                                  >mdi-qrcode-scan</v-icon
                                >
                              </v-btn>
                            </div>
                          </div>
                        </div>
                      </div>
                    </v-hover>
                    <div class="d-flex justify-center">
                      <h4 class="font18px text-capitalize">
                        {{ item.categoryName }}
                      </h4>
                    </div>
                  </v-card>
                </div>
              </div>
            </div>
          </div>
          <div v-else style="width: 100%">
            <router-view />
          </div>
        </div>
      </div>
    </v-container>
  </div>
</template>

<script>
import { currentUserDetails } from "@/mixins/GetCurrentUserDetails.js";
import { GetCategoryList } from "@/mixins/GetAllCategoryList.js";
import { GetQrByCategoryName } from "@/mixins/GetQrByCategoryName.js";
import { GetPresignedAPICall } from "@/mixins/GetPresignedURL.js";
import { listFavouriteQr } from "@/mixins/GetAllMyFavouriteQr.js";

import Snackbar from "@/components/Extras/MySnackbar.vue";
import { Auth } from "aws-amplify";
export default {
  mixins: [
    currentUserDetails,
    GetCategoryList,
    GetQrByCategoryName,
    GetPresignedAPICall,
    listFavouriteQr,
  ],
  components: { Snackbar },
  data() {
    return {
      categoryData: [],
      right: null,
      enableChildPage: false,
      selectedCategory: null,
      SnackBarComponent: {},
    };
  },

  async mounted() {
    await this.GetCategoryListMethod();
    const categoryDataPromises = this.categoryInfo.map(async (item) => {
      let qrFileName = await this.GetQrByCategoryNameMethod(item.category_name);
      return {
        categoryName: item.category_name,
        qrImgURL: await this.GetPresignedAPICallMethod(qrFileName),
      };
    });
    this.categoryData = await Promise.all(categoryDataPromises);
    this.apiCallMethod();
  },

  methods: {
    async apiCallMethod() {
      await this.currentUserDetailsMethod();
      await this.listFavouriteQrMethod();
    },

    viewQrMethod(category_name) {
      const targetPath = `/homepage/qrdetails/${category_name}`;
      if (this.$route.path !== targetPath) {
        this.$router.push({
          name: "qrdetails",
          params: { categoryName: category_name },
        });
        this.enableChildPage = true;
      }
      this.selectedCategory = category_name;
    },

    myQrMethod() {
      this.$router.push("/myqr");
      this.enableChildPage = true;
    },

    async logoutMethod() {
      try {
        await Auth.signOut({ global: true });
        this.SnackBarComponent = {
          SnackbarVModel: true,
          color: "green--text",
          Message: "Logged out successfully!",
        };
        this.$store.commit("SET_USER_INFO", "");
      } catch (error) {
        console.log("Error", error);
      }
    },
  },
};
</script>

<style scoped>
.homePageContainer {
  background-color: #1c1c1c;
}

.navbarCard {
  padding: 10px;
  background-color: #1c1c1c;
}

.category-list {
  max-height: 400px;
  overflow-y: auto;
}

.secondDiv {
  width: 100%;
}

.contentDiv {
  max-height: 520px;
  overflow-y: auto;
}

.flex-class1 {
  display: flex;
  flex-wrap: wrap;
}

.yellow-bg {
  background-color: #fdcb0a !important;
  color: black !important;
}

.wishlistBadge {
  position: relative;
  right: 6px;
  top: 4px;
  padding: 0;
}

.hoverBtns {
  position: absolute;
  right: 5px;
  top: 5px;
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
